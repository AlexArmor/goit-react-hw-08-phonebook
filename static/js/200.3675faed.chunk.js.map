{"version":3,"file":"static/js/200.3675faed.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\nmargin-bottom: 15px;\nfont-size: 20px;\n`;\n\nexport const BtnDeleteItem = styled.button`\nmargin-left: 10px;\nborder-radius: 5px;\npadding: 4px;\ncursor: pointer;\n&:hover{\n    background-color: orange;\n}\n&:focus{\n    background-color: #ff4800;\n}\n`;","import { selectContacts, selectFilter } from 'redux/contacts/selectors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContacts } from 'redux/contacts/operations';\nimport { Item } from './ContactList.styled';\nimport { BtnDeleteItem } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase().trim())\n  );\n\n  return (\n    <ul>\n      {filteredContacts.map(({ id, name, number }) => {\n        return (\n          <Item key={id}>\n            {name}: {number}\n            <BtnDeleteItem\n              type=\"button\"\n              onClick={() => dispatch(deleteContacts(id))}\n            >\n              delete\n            </BtnDeleteItem>\n          </Item>\n        );\n      })}\n    </ul>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  border: 1px solid white;\n  width: 400px;\n  padding: 10px;\n  border-radius: 10px;\n  padding: 30px;\n`;\n\nexport const Title = styled.h3`\n  margin-top: 0;\n`;\n\nexport const InputName = styled.input`\n  width: 200px;\n  height: 25px;\n  display: block;\n  border-radius: 5px;\n`;\n\nexport const InputNumber = styled.input`\n  width: 200px;\n  height: 25px;\n  display: block;\n  margin-bottom: 15px;\n  border-radius: 5px;\n`;\n\nexport const BtnSubmit = styled.button`\n  width: 100px;\n  height: 30px;\n  border-radius: 5px;\n  cursor: pointer;\n  &:hover {\n    background-color: orange;\n  }\n`;\n\nexport const Section = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background: linear-gradient(\n    90deg,\n    rgba(131, 58, 180, 0.46262254901960786) 0%,\n    rgba(253, 29, 29, 0.3757878151260504) 50%,\n    rgba(252, 176, 69, 0.4766281512605042) 100%\n  );\n`;","import { Form } from './ContactForm.styled';\nimport { Title } from './ContactForm.styled';\nimport { InputName } from './ContactForm.styled';\nimport { InputNumber } from './ContactForm.styled';\nimport { BtnSubmit } from './ContactForm.styled';\nimport { addContacts } from 'redux/contacts/operations';\nimport { useDispatch } from 'react-redux';\n// import { nanoid } from 'nanoid';\nimport { useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const name = event.target.elements.name.value;\n    const number = event.target.elements.number.value;\n    const isAtList = contacts.find(contact => contact.name === name);\n    if (isAtList) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    const contact = {\n      name,\n      number,\n      // id: nanoid(),\n    };\n    dispatch(addContacts(contact));\n    event.target.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Title>Name</Title>\n      <InputName\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <h3>Number</h3>\n      <InputNumber\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <BtnSubmit type=\"submit\">Add contacts</BtnSubmit>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterInput = styled.input`\n  width: 200px;\n  height: 25px;\n  border-radius: 5px;\n`;\n","import { FilterInput } from './Filter.styled';\nimport { filterContacts } from 'redux/contacts/filterSlice';\nimport { useDispatch } from 'react-redux';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <h3>Find contacts by name</h3>\n      <FilterInput\n        type=\"text\"\n        onChange={e => {\n          const action = filterContacts(e.target.value);\n          dispatch(action);\n        }}\n      />\n    </>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectLoading } from 'redux/contacts/selectors';\nimport { Section } from 'components/ContactForm/ContactForm.styled';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Phone book</title>\n      </Helmet>\n      <Section>\n        <h1>Phone book</h1>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        {isLoading && !error && <b>Request in progress...</b>}\n        <ContactList />\n      </Section>\n    </>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectLoading","isLoading","selectError","error","selectFilter","filter","Item","styled","BtnDeleteItem","ContactList","dispatch","useDispatch","useSelector","filteredContacts","contact","name","toLowerCase","includes","trim","map","id","number","type","onClick","deleteContacts","Form","Title","InputName","InputNumber","BtnSubmit","Section","ContactForm","onSubmit","event","preventDefault","target","elements","value","isAtList","find","alert","addContacts","reset","pattern","title","required","FilterInput","Filter","onChange","e","action","filterContacts","Contacts","useEffect","fetchContacts","Helmet"],"sourceRoot":""}